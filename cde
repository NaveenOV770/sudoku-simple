question=[[ 3, 0, 6, 5, 0, 8, 4, 0, 0],
         [5, 2, 0, 0, 0, 0, 0, 0, 0],
         [0, 8, 7, 0, 0, 0, 0, 3, 1],
         [0, 0, 3, 0, 1, 0, 0, 8, 0],
         [9, 0, 0, 8, 6, 3, 0, 0, 5],
         [0, 5, 0, 0, 9, 0, 6, 0, 0],
         [1, 3, 0, 0, 0, 0, 2, 5, 0],
         [0, 0, 0, 0, 0, 0, 0, 7, 4],
         [0, 0, 5, 2, 0, 6, 3, 0, 0]]
import numpy as np
print(np.matrix(question))

def possible(x,y,n):
    global question
    for i in range(9):
        if (question[x][i] == n):
            return False
    for i in range(9):
        if (question[i][y] == n):
            return False
    x0 = (x//3)*3
    y0 = (y//3)*3
    for i in range(0,3):
        for j in range(0,3):
            if(question[x0 + i][y0 + j] == n):
                return False
    return True


def solve():
    global question
    for x in range(9):
        for y in range(9):
            if(question[x][y] == 0):
                for n in range(1,10):
                    if possible(x,y,n):
                        question[x][y] = n
                        solve()
                        question[x][y] = 0
                return
    print('\n\n The answer is', np.matrix(question))
    return

solve()
